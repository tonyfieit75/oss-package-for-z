# Base image
FROM mirror.gcr.io/s390x/debian:bullseye-slim

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV JAVA_HOME=/opt/openjdk
ENV PATH=$JAVA_HOME/bin:/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV BAZEL_VERSION=4.2.1
ENV AIRFLOW_VERSION=2.3.0
ENV CONSTRAINT_URL=https://raw.githubusercontent.com/apache/airflow/constraints-2.2.3/constraints-3.8.txt
ENV POSTGRES_HOST=postgres
ENV AIRFLOW_HOME=/usr/local/airflow
ENV AIRFLOW__CORE__EXECUTOR=CeleryExecutor
ENV AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
ENV AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
ENV AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres:5432/airflow

# Expose necessary ports
EXPOSE 8080 5555 8793

# Install necessary packages
RUN apt-get update && apt-get install -y \
    build-essential \
    g++ \
    curl \
    git \
    python3-dev \
    python3-pip \
    unzip \
    zip \
    libssl-dev \
    libc-ares-dev \
    libprotobuf-dev \
    protobuf-compiler \
    libc++-dev \
    libc++abi-dev \
    libstdc++-10-dev \
    ca-certificates \
    pybind11-dev \
    make \
    cmake \
    wget \
    postgresql-server-dev-all \
    libxml2-dev \
    libxslt1-dev \
    libmariadb-dev \
    libmariadb-dev-compat \
    pkg-config \
    libkrb5-dev \
    libsasl2-dev \
    libldap2-dev \
    libffi-dev \
    cargo \
    openssl && \
    apt-get clean

# Install OpenJDK
RUN curl -L -o openjdk.tar.gz https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.11+9/OpenJDK11U-jdk_s390x_linux_hotspot_11.0.11_9.tar.gz && \
    mkdir -p /opt/openjdk && \
    tar -zxf openjdk.tar.gz -C /opt/openjdk --strip-components=1 && \
    rm openjdk.tar.gz

# Install Rust and set up environment
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y && \
    echo 'source $HOME/.cargo/env' >> $HOME/.bashrc && \
    . "$HOME/.cargo/env" && \
    rustc --version

# Install Python dependencies
RUN pip install setuptools-rust && \
    pip install "cryptography==3.4.8" && \
    pip install --only-binary cryptography cryptography && \
    pip install pip==20.3.4 && \
    apt-get install -y libffi-dev libssl-dev && \
    pip install --upgrade pip setuptools wheel && \
    pip install pybind11 && \
    pip install pendulum==2.1.2

# Install Apache Airflow
RUN pip install "apache-airflow[celery,postgres,s3,ldap,mysql,redis]==${AIRFLOW_VERSION}"

# Clone and install Google Test
RUN git clone https://github.com/google/googletest.git && \
    cd googletest && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j$(nproc) && \
    make install

# Clone and install Google Benchmark
RUN git clone https://github.com/google/benchmark.git && \
    cd benchmark && \
    mkdir build && \
    cd build && \
    cmake .. -DBENCHMARK_ENABLE_GTEST_TESTS=OFF && \
    make -j$(nproc) && \
    make install

# Clone and install RE2 and Abseil libraries
RUN git clone https://github.com/google/re2 && \
    git clone https://github.com/abseil/abseil-cpp.git && \
    cd abseil-cpp && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j$(nproc) && \
    make install && \
    cd ../../re2 && \
    make -j$(nproc) && \
    make install

# Create the Airflow working directory
WORKDIR /usr/local/airflow

# Command to run the Airflow webserver
CMD ["airflow", "webserver"]

